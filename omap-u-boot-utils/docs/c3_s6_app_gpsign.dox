/**
@page ub_gpsign gpsign

This application generates a formatted image which may be used for
nand, onenand or mmc boot on a OMAP GP device.
This can also add a configuration header which
allows for preconfiguration of various clock,ram
GPMC or MMC settings prior to the image starting.

@section section Syntax:
@code
gpsign [-c config file] [-l loadaddr] [-f input_file] [-?]
@endcode

Where:
@li -c config_file : CH configuration file[Default none]
@li -l loadaddress : load address for result img[Default 0x40208800] -overrides
default and values in configuration file
@li -f input_file  : input binary to sign[Default x-load.bin]
@li -?             : provide extended help including a sample config file


@section example Usage Example:
@code
gpsign
	Uses x-loader.bin, loadaddress 0x40208800 and signs without Configuration
	Header

gpsign -l 0x80000000
	Uses x-loader.bin and signs without Configuration Header for loadaddress
	0x80000000

gpsign -c sample.cfg -l 0x80000000
	Uses x-loader.bin, uses sample.cfg and loadaddress 0x80000000
	(ignores value in configuration file)

gpsign -c sample.cfg -f u-boot.bin
	Uses u-boot.bin and uses sample.cfg for configuration

@endcode

@warning Please refer to OMAP3430 TRM for further details on the fields

Example Configuration file (full option list with gpsign -?)
@code
load_addr = "0x80000000"
platform_chsettings = {
	section_key = "0xC0C0C0C1"
	valid = "0x1"
	version = "0x1"
	flags = "0x050001FD"
	/*General clock settings */
	GEN_PRM_CLKSRC_CTRL = "0x40"
	GEN_PRM_CLKSEL = "0x3"
	GEN_CM_CLKSEL1_EMU = "0x2030A50"
	/* Clock Configuration */
	CLK_CM_CLKSEL_CORE = "0x40A"
	CLK_CM_CLKSEL_WKUP = "0x14"
	/* DPLL3 (Core) Settings */
	DPLL3_CM_CLKEN_PLL = "0x770077"
	DPLL3_CM_AUTOIDLE_PLL = "0x0"
	DPLL3_CM_CLKSEL1_PLL = "0x8A60C00"
	/* DPLL4 (Peripheral) Settings */
	DPLL4_CM_CLKEN_PLL = "0x770077"
	DPLL4_CM_AUTOIDLE_PLL = "0xD80C"
	DPLL4_CM_CLKSEL2_PLL = "0x0"
	DPLL4_CM_CLKSEL3_PLL = "0x9"
	/* DPLL1(MPU) Settings */
	DPLL1_CM_CLKEN_PLL_MPU = "0x77"
	DPLL1_CM_AUTOIDLE_PLL_MPU = "0x0"
	DPLL1_CM_CLKSEL1_PLL_MPU = "0x10FA0C"
	DPLL1_CM_CLKSEL2_PLL_MPU = "0x1"
	DPLL1_CM_CLKSTCTRL_MPU = "0x0"
}

platform_chram = {
	section_key = "0xC0C0C0C2"
	valid = "0x1"
	SDRC_SYSCONFIG_LSB = "0x0"
	SDRC_CS_CFG_LSB = "0x1"
	SDRC_SHARING_LSB = "0x100"
	SDRC_DLLA_CTRL = "0xA"
	SDRC_POWER = "0x81"
	/* I use CS0 and CS1 */
	flags = "0x3"
	/* CS0 */
	mem_type_cs0 = "0x3"
	SDRC_MCFG_0 =  "0x02D04011"
	SDRC_MR_0_LSB = "0x00000032"
	SDRC_ACTIM_CTRLA_0 = "0xBA9DC4C6"
	SDRC_ACTIM_CTRLB_0 = "0x00012522"
	SDRC_RFRCTRL_0 = "0x0004E201"
	/* CS1 */
	mem_type_cs1 = "0x3"
	SDRC_MCFG_1 =  "0x02D04011"
	SDRC_MR_1_LSB = "0x00000032"
	SDRC_ACTIM_CTRLA_1 = "0xBA9DC4C6"
	SDRC_ACTIM_CTRLB_1 = "0x00012522"
	SDRC_RFRCTRL_1 = "0x0004E201"
}
@endcode
@warning This uses http://liblcfg.carnivore.it/ (libcfg)for parsing
configuration files
@code
Copyright (c) 2007--2009  Paul Baecher
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
@endcode

@section file Files:
@li @ref src/gpsign.c
*/
